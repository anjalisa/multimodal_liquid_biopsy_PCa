name: umitools_extract
description: Extracts UMI barcode from a read and add it to the read name, leaving any sample barcode in place
keywords:
  - umitools
  - extract
tools:
  - umi_tools:
    description: >
      UMI-tools contains tools for dealing with Unique Molecular Identifiers (UMIs)/Random Molecular Tags (RMTs)
      and single cell RNA-Seq cell barcodes
    documentation: https://umi-tools.readthedocs.io/en/latest/
    license: ["MIT"]
input:
  - meta:
    type: map
    description: |
      Groovy Map containing sample information
        e.g. [ id:'test', single_end:false ]
  - reads:
    type: list
    description: |
      List of input FASTQ files whose UMIs will be extracted.
output:
  - meta:
    type: map
    description: |
      Groovy Map containing sample information
        e.g. [ id:'test', single_end:false ]
  - reads:
    type: file
    description: >
      Extracted FASTQ files. |
      For single-end reads, pattern is \${prefix}.umi_extract.fastq.gz. |
        For paired-end reads, pattern is \${prefix}.umi_extract_{1,2}.fastq.gz.
    pattern: "*.{fastq.gz}"
  - log:
    type: file
    description: Logfile for umi_tools
    pattern: "*.{log}"
  - versions:
    type: file
    description: File containing software versions
    pattern: "versions.yml"

authors:
  - "@drpatelh"
  - "@grst"

Additional comment (Anja Riediger): 
> The module UMITOOLS_EXTRACT was adapted, according to underlying setting at the DKFZ (UMIs are stored in I1.fastq.gz, additionally to {R1,R2}.fastq.gz)
> this is the command from bash-script: 
#    /home/riediger/.local/bin/umi_tools extract --bc-pattern=NNNNNNNNNNN --stdin=${READS}/${n}_I1.fastq.gz --read2-in=${READS}/${n}_R1.fastq.gz --stdout=${FASTQ_UMI_FILTER}/${i}_processed_R1.fastq.gz --read2-stdout -L ${FASTQ_UMI_FILTER}/${i}_R1_extract.log (--quality-filter-mask 20 --quality-encoding "phred33")
#    /home/riediger/.local/bin/umi_tools extract --bc-pattern=NNNNNNNNNNN --stdin=${READS}/${n}_I1.fastq.gz --read2-in=${READS}/${n}_R2.fastq.gz --stdout=${FASTQ_UMI_FILTER}/${i}_processed_R2.fastq.gz --read2-stdout -L ${FASTQ_UMI_FILTER}/${i}_R2_extract.log (--quality-filter-mask 20 --quality-encoding "phred33")
